version: '3.7'

volumes:
  db-data:
  mage-data:

services:
  db:
    container_name: db
    image: percona:5.7
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: magento
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:6.8.7
    restart: always
    environment:
      - discovery.type=single-node

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: magento
      RABBITMQ_DEFAULT_PASS: magento
    ports:
      - "15672:15672"

  magento:
    container_name: magento
    build: ./custom
    restart: always
    volumes:
      - mage-data:/var/www/html
    depends_on:
      - db
    environment:
      MAGENTO_PUBLIC_KEY: "${PUBLIC_KEY}"
      MAGENTO_PRIVATE_KEY: "${PRIVATE_KEY}"
      # MAGENTO_BASE_URL: http://localhost:8080/
      # MAGENTO_ADMIN_URI: admin
      # MAGENTO_DB_HOST: db
      # MAGENTO_DB_NAME: magento
      # MAGENTO_DB_USER: root
      # MAGENTO_DB_PASSWORD: rootpassword
      # MAGENTO_ADMIN_FIRSTNAME: admin
      # MAGENTO_ADMIN_LASTNAME: admin
      # MAGENTO_ADMIN_EMAIL: admin@admin.com
      # MAGENTO_ADMIN_USER: admin
      # MAGENTO_ADMIN_PASSWORD: admin123

  nginx:
    container_name: nginx
    build: ./nginx
    restart: always
    volumes:
      - mage-data:/var/www/html
    depends_on: 
      - magento
    environment:
      UPSTREAM_SERVER: magento

  varnish:
    container_name: varnish
    build: ./varnish
    restart: always
    depends_on:
      - nginx
    environment:
      BACKEND_HOST: nginx
      PURGE_HOST: magento
    ports:
      - "8080:80"
